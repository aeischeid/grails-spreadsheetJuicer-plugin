Grails SpreadsheetJuicer Plugin
author: Aaron Eischeid

The spreadsheetJuicer plugin provides Grails with a service to extract the
data from simple MSexcel and OpenOffice spreadsheets into a form easily used
in groovy. Under the hood it is using apache POI and JOpenDocument libraries.

Basically it is a convience plugin to save people with relatively simple 
spreadsheets from having to work with the underlying libs which are very 
complete and can thus be a bit complex.

Additionally I have worked with the developer of jQuery.sheet, a plugin for 
displaying spreadsheet data in a browser. The resulting data format is very 
simple to convert to JSON and import into that plugin.

 -- not packaged as a plugin yet, but when it is you will be able to ...
Install from the zip file on Github.
    "grails install-plugin [path/to/zip/file]"
 -- I will also try to release it to the grails repos with relase-plugin --zipOnly ...
Install the plugin from the grails repositories using the grails command:
    "grails install-plugin pdf"

<------------>
    Usage:
<------------>

def ssDataHash = SpreadsheetJuicerService.getSheetAsHash(file)

simple conversion to JSON 

def ssJson = ssDataHash.encodeAsJSON()
return [params:params, ssJson:ssJson]

a more thorough example:

in gsp --

    <g:uploadForm action="uploadData" name="ssFileForm">
      <h3>Upload Spreadsheet</h3>
      <label>select file:</label> <input type="file" name="ssFile"/>
      <input type="submit" name="ssSubmit" value="upload"/>
    </g:uploadForm>
    
in controller -- 

class UploadDataController {

    def spreadsheetJuicerService
    
    def index = { redirect(action:select,params:params)}

    def select = {
      return [result:params.result]
    }
    
    def uploadData {
      def uploadFile = request.getFile("saleFile")
      def hash = spreadsheetJuicerService.getSheetAsHash(uploadFile)
      def result = hash.encodeAsJSON()
      redirect(action:select, params:[result:result])
    }
}
    
back in the gsp --
    
    [all the other pieces you need for the jQuery.sheet plugin]
    
    <script>
      $(document).ready(function(){
        var ssData;
        <g:if test="${result}" >
        ssData = ${result};
        console.log(ssData);
        var ss = jQuery.sheet.importSheet.json(ssData);
        $("#sheetBox").sheet({
          buildSheet: ss,
          title: "this is what was uploaded",
        });
        </g:if>
      });
    </script>
